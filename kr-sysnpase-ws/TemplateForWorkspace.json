{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "kr-sysnpase-ws"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"kr-sysnpase-ws-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'kr-sysnpase-ws-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:kr-sysnpase-ws.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"storagegen2kr_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'storagegen2kr'"
		},
		"kr-sysnpase-ws-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storagesynapsews.dfs.core.windows.net"
		},
		"storagegen2kr_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storagegen2kr.dfs.core.windows.net/"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/CopyPipeline_avd')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_avd",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "SalesLT.Product"
							},
							{
								"name": "Destination",
								"value": "SalesLT.Product"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlPoolSink",
								"writeBehavior": "Insert",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ProductNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Color",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Color",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StandardCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "StandardCost",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ListPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "ListPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Size",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Size",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 8
										},
										"sink": {
											"name": "Weight",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ProductCategoryID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductCategoryID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ProductModelID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductModelID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "SellStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SellStartDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "SellEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SellEndDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DiscontinuedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DiscontinuedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ThumbNailPhoto",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "ThumbNailPhoto",
											"type": "Byte[]"
										}
									},
									{
										"source": {
											"name": "ThumbnailPhotoFileName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ThumbnailPhotoFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "rowguid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_avd",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_avd",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-10-21T17:31:48Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_avd')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_avd')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Copy_DimProduct_sk')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_r67",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.DimProduct"
							},
							{
								"name": "Destination",
								"value": "dbo.DimProduct_sk"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlPoolSink",
								"writeBehavior": "Insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ProductModelID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductModelID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ProductcategoryID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductcategoryID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ProductName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProductModelName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductModelName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProductCategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductCategoryName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_r67",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_r67",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T15:47:31Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_r67')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_r67')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Copy_from_gen2_storage')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_fom_datalake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "csv-container//"
							},
							{
								"name": "Destination",
								"value": "dbo.pool_logdata"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "SqlPoolSink",
								"writeBehavior": "Insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Correlation id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Correlation id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Operation name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operation name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Event category",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Event category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Subscription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Subscription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Event initiated by",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Event initiated by",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Resource type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resource type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Resource group",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resource group",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Resource",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resource",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_jrn",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_jrn",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T16:22:59Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_jrn')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_jrn')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Copy_sqldb_sales_fact_to_hash_table')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_3me",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.FactSales"
							},
							{
								"name": "Destination",
								"value": "dbo.FactSales"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlPoolSink",
								"writeBehavior": "Insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SalesOrderID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesOrderID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CustomerID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CustomerID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OrderQty",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "OrderQty",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "OrderDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "OrderDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "TaxAmt",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "TaxAmt",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_3me",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_3me",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-10-22T09:15:05Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_3me')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_3me')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/copy_dim_tables_from_sqlserver_to_dpool')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ForEach_izh",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_izh",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "dbo.@{item().destination.table}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlPoolSink",
											"writeBehavior": "Insert"
										},
										"enableStaging": false,
										"translator": {
											"value": "@item().copyActivity.translator",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_izh",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_izh",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().destination.table"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "DimCustomer"
								},
								"destination": {
									"table": "DimCustomer"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "CustomerID",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "CustomerID",
													"type": "Int32",
													"physicalType": "int"
												}
											},
											{
												"source": {
													"name": "CompanyName",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "CompanyName",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "SalesPerson",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "SalesPerson",
													"type": "String",
													"physicalType": "varchar"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							},
							{
								"source": {
									"table": "DimProduct"
								},
								"destination": {
									"table": "DimProduct"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "ProductID",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ProductID",
													"type": "Int32",
													"physicalType": "int"
												}
											},
											{
												"source": {
													"name": "ProductModelID",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ProductModelID",
													"type": "Int32",
													"physicalType": "int"
												}
											},
											{
												"source": {
													"name": "ProductcategoryID",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ProductcategoryID",
													"type": "Int32",
													"physicalType": "int"
												}
											},
											{
												"source": {
													"name": "ProductName",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "ProductName",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "ProductModelName",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "ProductModelName",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "ProductCategoryName",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "ProductCategoryName",
													"type": "String",
													"physicalType": "varchar"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-10-22T09:36:32Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_izh')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_izh')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_3me')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderQty",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FactSales"
				},
				"sqlPool": {
					"referenceName": "dedicatedpool",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/dedicatedpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_avd')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Product"
				},
				"sqlPool": {
					"referenceName": "dedicatedpool",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/dedicatedpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_izh')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				},
				"sqlPool": {
					"referenceName": "dedicatedpool",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/dedicatedpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_jrn')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "Correlation id",
						"type": "varchar"
					},
					{
						"name": "Operation name",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "Event category",
						"type": "varchar"
					},
					{
						"name": "Level",
						"type": "varchar"
					},
					{
						"name": "Time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Subscription",
						"type": "varchar"
					},
					{
						"name": "Event initiated by",
						"type": "varchar"
					},
					{
						"name": "Resource type",
						"type": "varchar"
					},
					{
						"name": "Resource group",
						"type": "varchar"
					},
					{
						"name": "Resource",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "pool_logdata"
				},
				"sqlPool": {
					"referenceName": "dedicatedpool",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/dedicatedpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_r67')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "ProductSK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductcategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductName",
						"type": "varchar"
					},
					{
						"name": "ProductModelName",
						"type": "varchar"
					},
					{
						"name": "ProductCategoryName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimProduct_sk"
				},
				"sqlPool": {
					"referenceName": "dedicatedpool",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/dedicatedpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_3me')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderQty",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FactSales"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_avd')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Product"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_izh')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_jrn')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storagegen2kr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "csv-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Correlation id",
						"type": "String"
					},
					{
						"name": "Operation name",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "Event category",
						"type": "String"
					},
					{
						"name": "Level",
						"type": "String"
					},
					{
						"name": "Time",
						"type": "String"
					},
					{
						"name": "Subscription",
						"type": "String"
					},
					{
						"name": "Event initiated by",
						"type": "String"
					},
					{
						"name": "Resource type",
						"type": "String"
					},
					{
						"name": "Resource group",
						"type": "String"
					},
					{
						"name": "Resource",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/storagegen2kr')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_r67')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "ProductcategoryID",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "ProductName",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ProductModelName",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ProductCategoryName",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimProduct"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/kr-sysnpase-ws-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('kr-sysnpase-ws-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/kr-sysnpase-ws-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('kr-sysnpase-ws-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/storagegen2kr')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('storagegen2kr_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('storagegen2kr_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Customercourse')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adf_scripts"
				},
				"content": {
					"query": "CREATE TABLE [Customercourse]\n(\n    [CustomerID] int,\n    [CustomerName] varchar(200),\n    [Registered] BIT,\n    [Courses] varchar(200)\n);\n\nDROP TABLE [Customercourse];\nCREATE TABLE [Customercourse]\n(\n    [CustomerID] int,\n    [CustomerName] varchar(200),\n    [Registered] BIT,\n    [Courses] varchar(200),\n    [Mobile] varchar(200),\n    [City] varchar(200)\n);\n\nselect * from Customercourse;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DimCustomer_DimProduct')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adf_scripts"
				},
				"content": {
					"query": "\nCREATE TABLE [dbo].[DimCustomer](\n\t[CustomerID] [int] NOT NULL,\n    [CompanyName] varchar(200) NOT NULL,\n\t[SalesPerson] varchar(300) NOT NULL\n)\n    WITH  \n(   \n    DISTRIBUTION = REPLICATE\n);\n\nCREATE TABLE [dbo].[DimProduct](\n\t[ProductID] [int] NOT NULL,\n\t[ProductModelID] [int] NOT NULL,\n\t[ProductcategoryID] [int] NOT NULL,\n\t[ProductName] varchar(50) NOT NULL,\t\n\t[ProductModelName] varchar(50) NULL,\n\t[ProductCategoryName] varchar(50) NULL\n)\nWITH  \n(   \n    DISTRIBUTION = REPLICATE\n);\t\n\ndrop table [dbo].[DimProduct_SK];\nCREATE TABLE [dbo].[DimProduct_SK](\n    [ProductSK] [int] NOT NULL,\n\t[ProductID] [int] NOT NULL,\n\t[ProductModelID] [int] NOT NULL,\n\t[ProductcategoryID] [int] NOT NULL,\n\t[ProductName] varchar(50) NOT NULL,\t\n\t[ProductModelName] varchar(50) NULL,\n\t[ProductCategoryName] varchar(50) NULL\n)\nWITH  \n(   \n    DISTRIBUTION = REPLICATE\n);\n\n\nCREATE TABLE [dbo].[DimCustomer_SK](\n    [CustomerSK] [int] NOT NULL,\n\t[CustomerID] [int] NOT NULL,\n    [CompanyName] varchar(200) NOT NULL,\n\t[SalesPerson] varchar(300) NOT NULL\n)\n    WITH  \n(   \n    DISTRIBUTION = REPLICATE\n);",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/FactSales_hash_table')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "drop TABLE [dbo].[FactSales];\nCREATE TABLE [dbo].[FactSales](\n\t[ProductID] [int] NOT NULL,\n\t[SalesOrderID] [int] NOT NULL,\n\t[CustomerID] [int] NOT NULL,\n\t[OrderQty] [smallint] NOT NULL,\n\t[UnitPrice] [money] NOT NULL,\n\t[OrderDate] [datetime] NULL,\n\t[TaxAmt] [money] NULL\n)\nWITH  \n(   \n    DISTRIBUTION = HASH (CustomerID)\n)\n;\n\nSELECT * FROM [dbo].[FactSales]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adf_scripts"
				},
				"content": {
					"query": "-- DELETE from [dbo].[FactSales];\n\nselect *  FROM [dbo].[FactSales]\nselect *  FROM [dbo].DimCustomer\nselect count(*) FROM [dbo].DimProduct\n\nselect * from [dbo].[DimProduct_SK]\n\n-- delete from [dbo].[DimCustomer_SK];\nselect top(500) * from [dbo].[DimCustomer_SK] ORDER by customerSk asc\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/crate_dim_tables_replicate')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "drop TABLE [dbo].[DimCustomer];\n\nCREATE TABLE [dbo].[DimCustomer](\n\t[CustomerID] [int] NOT NULL,\n    [CompanyName] varchar(200) NOT NULL,\n\t[SalesPerson] varchar(300) NOT NULL\t\t\n)\nWITH(\n    Distribution = REPLICATE\n)\n;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_FactSales')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adf_scripts"
				},
				"content": {
					"query": "CREATE TABLE [dbo].[FactSales](\n\t[ProductID] [int] NOT NULL,\n\t[SalesOrderID] [int] NOT NULL,\n\t[CustomerID] [int] NOT NULL,\n\t[OrderQty] [smallint] NOT NULL,\n\t[UnitPrice] [money] NOT NULL,\n\t[OrderDate] [datetime] NULL,\n\t[TaxAmt] [money] NULL\n)\nWITH  \n(   \n    DISTRIBUTION = HASH (CustomerID)\n);\n\n\nCREATE TABLE [dbo].[FactSales_derived_column](\n\t[ProductID] [int] NOT NULL,\n\t[SalesOrderID] [int] NOT NULL,\n\t[CustomerID] [int] NOT NULL,\n\t[OrderQty] [smallint] NOT NULL,\n\t[UnitPrice] [money] NOT NULL,\n\t[OrderDate] [datetime] NULL,\n\t[TaxAmt] [money] NULL,\n    [TotalAmount] [money] NOT NULL\n)\nWITH  \n(   \n    DISTRIBUTION = HASH (CustomerID)\n);\n\nselect TOP(10) * from FactSales_derived_column;\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_Serverlogs')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adf_scripts"
				},
				"content": {
					"query": "CREATE TABLE [Serverlogs]\n(\n    [Remote_addr] varchar(20),\n    [Time_local] varchar(100),\n    [Request] varchar(200),\n    [Status] int,\n    [Bytes] int\n);\n\nselect * from Serverlogs;\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_dim_tables')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "drop TABLE [dbo].[DimCustomer];\n\nCREATE TABLE [dbo].[DimCustomer](\n\t[CustomerID] [int] NOT NULL,\n    [CompanyName] varchar(200) NOT NULL,\n\t[SalesPerson] varchar(300) NOT NULL\t\t\n)\n;\n\nCREATE TABLE [dbo].[DimProduct](\n\t[ProductID] [int] NOT NULL,\n\t[ProductModelID] [int] NOT NULL,\n\t[ProductcategoryID] [int] NOT NULL,\n\t[ProductName] varchar(50) NOT NULL,\t\n\t[ProductModelName] varchar(50) NULL,\n\t[ProductCategoryName] varchar(50) NULL\n);",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_logdata_parquet')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adf_scripts"
				},
				"content": {
					"query": "DROP TABLE [logdata_parquet];\n\nCREATE TABLE [logdata_parquet]\n(\n    [Correlationid] [varchar](200) NULL,\n\t[Operationname] [varchar](200) NULL,\n\t[Status] [varchar](100) NULL,\n\t[Eventcategory] [varchar](100) NULL,\n\t[Level] [varchar](100) NULL,\n\t[Time] [datetime] NULL,\n\t[Subscription] [varchar](200) NULL,\n\t[Eventinitiatedby] [varchar](1000) NULL,\n\t[Resourcetype] [varchar](1000) NULL,\n\t[Resourcegroup] [varchar](1000) NULL,\n    [Resource] [varchar](2000) NULL\n);\n\nSELECT * from logdata_parquet \n--where Resourcegroup is NULL;\n\n-- delete from logdata_parquet;\n\nSELECT Resourcegroup,COUNT(OperationName) AS 'Operation Count' FROM logdata_parquet\nGROUP BY Resourcegroup\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_logdata_parquet_with_filepath')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adf_scripts"
				},
				"content": {
					"query": "-- Lab - Adding an extra column\n\nDROP TABLE [logdata_parquet]\n\nCREATE TABLE [logdata_parquet]\n(\n    [Correlationid] [varchar](200) NULL,\n\t[Operationname] [varchar](200) NULL,\n\t[Status] [varchar](100) NULL,\n\t[Eventcategory] [varchar](100) NULL,\n\t[Level] [varchar](100) NULL,\n\t[Time] [datetime] NULL,\n\t[Subscription] [varchar](200) NULL,\n\t[Eventinitiatedby] [varchar](1000) NULL,\n\t[Resourcetype] [varchar](1000) NULL,\n\t[Resourcegroup] [varchar](1000) NULL,\n    [Resource] [varchar](2000) NULL,\n    [FilePath] [varchar](400) NULL\n);\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_logdata_table')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adf_scripts"
				},
				"content": {
					"query": "-- Lab - Azure Data Lake to Azure Synapse - Log.csv file\n-- Drop the existing tables\n\nDROP EXTERNAL TABLE logdata\nDROP EXTERNAL TABLE logdata_parquet\n\nDROP TABLE DimCustomer\nDROP TABLE DimProduct\nDROP TABLE FactSales\nDROP TABLE logdata_new\nDROP TABLE pool_logdata\nDROP TABLE pool_logdata_parquet\n\n\nCREATE TABLE [logdata]\n(\n    [Correlation id] [varchar](200) NULL,\n\t[Operation name] [varchar](200) NULL,\n\t[Status] [varchar](100) NULL,\n\t[Event category] [varchar](100) NULL,\n\t[Level] [varchar](100) NULL,\n\t[Time] [datetime] NULL,\n\t[Subscription] [varchar](200) NULL,\n\t[Event initiated by] [varchar](1000) NULL,\n\t[Resource type] [varchar](1000) NULL,\n\t[Resource group] [varchar](1000) NULL,\n    [Resource] [varchar](2000) NULL\n)\n;\n\nselect * from logdata",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_pool_logdata_hash')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "drop table [dbo].[pool_logdata];\n\nCREATE TABLE [dbo].[pool_logdata]\n( \n\t[Correlation id] [varchar](200)  NULL,\n\t[Operation name] [varchar](200)  NULL,\n\t[Status] [varchar](100)  NULL,\n\t[Event category] [varchar](100)  NULL,\n\t[Level] [varchar](100)  NULL,\n\t[Time] [datetime]  NULL,\n\t[Subscription] [varchar](200)  NULL,\n\t[Event initiated by] [varchar](1000)  NULL,\n\t[Resource type] [varchar](1000)  NULL,\n\t[Resource group] [varchar](1000)  NULL,\n\t[Resource] [varchar](2000)  NULL\n)\nWITH\n(\n\tDISTRIBUTION = HASH([Operation name])\n);",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_pool_logdata_with_partition')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "drop table [dbo].[pool_logdata];\n\nCREATE TABLE [dbo].[pool_logdata]\n(\n    [Correlation id] [varchar](200) NULL,\n\t[Operation name] [varchar](200) NULL,\n\t[Status] [varchar](100) NULL,\n\t[Event category] [varchar](100) NULL,\n\t[Level] [varchar](100) NULL,\n\t[Time] [datetime] NULL,\n\t[Subscription] [varchar](200) NULL,\n\t[Event initiated by] [varchar](1000) NULL,\n\t[Resource type] [varchar](1000) NULL,\n\t[Resource group] [varchar](1000) NULL,\n    [Resource] [varchar](2000) NULL\n)\nWITH  \n(   \n    DISTRIBUTION = HASH ([Operation name]),\n    PARTITION ( [Time] RANGE RIGHT FOR VALUES\n            ('2023-01-01','2023-02-01','2023-03-01','2023-04-01'))\n)\n;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_product_dim_with_sk')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "\nCREATE TABLE [dbo].[DimProduct_sk]\n( \n\t[ProductSK] [int]  NOT NULL,\n\t[ProductID] [int]  NOT NULL,\n\t[ProductModelID] [int]  NOT NULL,\n\t[ProductcategoryID] [int]  NOT NULL,\n\t[ProductName] [varchar](50)  NOT NULL,\n\t[ProductModelName] [varchar](50)  NULL,\n\t[ProductCategoryName] [varchar](50)  NULL\n);\n\n\nselect * from [dbo].[DimProduct_sk] order by ProductSK;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dedicated_pol_parquet')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = 'P@ssword@123';\n\ncreate DATABASE SCOPED CREDENTIAL CredSaasToken3\nWITH IDENTITY = 'SHARED ACCESS SIGNATURE',\nSECRET='sv=2022-11-02&ss=bt&srt=sco&sp=rwlcuy&se=2023-10-27T20:20:33Z&st=2023-10-20T12:20:33Z&spr=https&sig=9CqopMWJAGr2KUxkKaOU0D4h67K5Spna5K5Rzo23%2Fog%3D'\n;\n\ncreate EXTERNAL DATA SOURCE ds_log_data_31 \nwith (LOCATION='https://storagegen2kr.blob.core.windows.net/container-parquet',\n        CREDENTIAL = CredSaasToken3);\n\nCREATE EXTERNAL FILE FORMAT ParquetFileFormat WITH(\n    FORMAT_TYPE= PARQUET,\n    DATA_COMPRESSION='org.apache.hadoop.io.compress.SnappyCodec'\n);\n\ndrop EXTERNAL TABLE logdata_parquet;\nCREATE EXTERNAL TABLE [logdata_parquet]\n(\n    [Correlationid] [varchar](200) NULL,\n\t[Operationname] [varchar](200) NULL,\n\t[Status] [varchar](100) NULL,\n\t[Eventcategory] [varchar](100) NULL,\n\t[Level] [varchar](100) NULL,\n\t[Time] [varchar](100) NULL,\n\t[Subscription] [varchar](200) NULL,\n\t[Eventinitiatedby] [varchar](1000) NULL,\n\t[Resourcetype] [varchar](1000) NULL,\n\t[Resourcegroup] [varchar](1000) NULL,\n    [Resource] [varchar](2000) NULL)\nWITH(\n    LOCATION='/',\n    DATA_SOURCE=ds_log_data_31,\n    FILE_FORMAT=ParquetFileFormat\n);\n\nSELECT top 10 * FROM [logdata_parquet] ;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dedicatedpool_ext_csv')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "create DATABASE SCOPED CREDENTIAL CredAccessKey\nWITH IDENTITY = 'storagegen2kr',\nSECRET = 'hrZhQs/4WzYLzXzeedTOPwXMyd1c+gIp43kiU0r7PlI3SBhMIcpVAEFED+ng0J/gmqTFVyFkkwE/+AStnGtm0g=='\n;\n\n\ncreate EXTERNAL DATA SOURCE ds_log_data_4 \nwith (LOCATION='abfss://csv-container@storagegen2kr.dfs.core.windows.net',\n        CREDENTIAL = CredAccessKey,\n        TYPE=HADOOP);\n\nCREATE EXTERNAL FILE FORMAT TextFileFormat WITH(\n    FORMAT_TYPE=DELIMITEDTEXT,\n    FORMAT_OPTIONS(\n        FIELD_TERMINATOR=',',\n        FIRST_ROW = 2\n    )\n)\n;\n\ndrop EXTERNAL TABLE logdata_csv;\nCREATE EXTERNAL TABLE [logdata_csv]\n(\n    [Correlation id] [varchar](200) NULL,\n\t[Operation name] [varchar](200) NULL,\n\t[Status] [varchar](100) NULL,\n\t[Event category] [varchar](100) NULL,\n\t[Level] [varchar](100) NULL,\n\t[Time] [varchar](50) NULL,\n\t[Subscription] [varchar](200) NULL,\n\t[Event initiated by] [varchar](1000) NULL,\n\t[Resource type] [varchar](1000) NULL,\n\t[Resource group] [varchar](1000) NULL,\n    [Resource] [varchar](2000) NULL)\nWITH(\n    LOCATION = '/Log.csv',\n    DATA_SOURCE=ds_log_data_4,\n    FILE_FORMAT=TextFileFormat\n);\n\nselect * from logdata_csv;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dpool_pers_table_with_copy')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- persistant table\nCREATE TABLE [pool_logdata]\n(\n    [Correlation id] [varchar](200) NULL,\n\t[Operation name] [varchar](200) NULL,\n\t[Status] [varchar](100) NULL,\n\t[Event category] [varchar](100) NULL,\n\t[Level] [varchar](100) NULL,\n\t[Time] [datetime] NULL,\n\t[Subscription] [varchar](200) NULL,\n\t[Event initiated by] [varchar](1000) NULL,\n\t[Resource type] [varchar](1000) NULL,\n\t[Resource group] [varchar](1000) NULL,\n    [Resource] [varchar](2000) NULL\n)\n\nCOPY INTO [pool_logdata]\nFROM 'https://storagegen2kr.blob.core.windows.net/csv-container/Log.csv'\nWITH(\n    FILE_TYPE='csv',\n    CREDENTIAL=(IDENTITY='Storage Account Key', SECRET='hrZhQs/4WzYLzXzeedTOPwXMyd1c+gIp43kiU0r7PlI3SBhMIcpVAEFED+ng0J/gmqTFVyFkkwE/+AStnGtm0g=='),\n    FIRSTROW=2\n);\n\nSELECT * from pool_logdata;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dpool_table_parquet_copy')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE TABLE [pool_logdata_parquet]\n(\n    [Correlationid] [varchar](200) NULL,\n\t[Operationname] [varchar](200) NULL,\n\t[Status] [varchar](100) NULL,\n\t[Eventcategory] [varchar](100) NULL,\n\t[Level] [varchar](100) NULL,\n\t[Time] [varchar](100) NULL,\n\t[Subscription] [varchar](200) NULL,\n\t[Eventinitiatedby] [varchar](1000) NULL,\n\t[Resourcetype] [varchar](1000) NULL,\n\t[Resourcegroup] [varchar](1000) NULL,\n    [Resource] [varchar](2000) NULL\n    )\n;\n\nCOPY INTO pool_logdata_parquet\nFROM 'https://storagegen2kr.blob.core.windows.net/container-parquet/*.parquet'\nWITH(\n    FILE_TYPE='parquet',\n    CREDENTIAL=(IDENTITY='Storage Account Key',  SECRET='hrZhQs/4WzYLzXzeedTOPwXMyd1c+gIp43kiU0r7PlI3SBhMIcpVAEFED+ng0J/gmqTFVyFkkwE/+AStnGtm0g==')\n);\n\nSELECT * from pool_logdata_parquet;\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dpool_table_polybase')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "select * from sys.database_scoped_credentials;\nselect * from sys.external_data_sources;\nselect * from sys.external_file_formats;\n\n-- drop table pool_logdata_parquet;\n\nCREATE table pool_logdata_parquet_2\nwith (\n    DISTRIBUTION = ROUND_ROBIN\n)\nAS\nselect * FROM logdata_parquet;\n\nselect * from pool_logdata_parquet_2;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/openrowset')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "select * \nFROM OPENROWSET(BULK 'https://storagegen2kr.blob.core.windows.net/container-parquet/*.parquet',\n            FORMAT='Parquet')\nas logdata_openrowset",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "appdb",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/partition_chesk')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "DBCC PDW_SHOWSPACEUSED('[dbo].[pool_logdata]')\n\n\nSELECT FORMAT(Time,'yyyy-MM-dd') AS dt,COUNT(*) AS 'Number of Operations' \nFROM [pool_logdata]\nGROUP BY FORMAT(Time,'yyyy-MM-dd')",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pool_logdata_with_indx')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE TABLE [pool_logdata_2]\n(\n    [Correlation id] [varchar](200) NULL,\n\t[Operation name] [varchar](200) NULL,\n\t[Status] [varchar](100) NULL,\n\t[Event category] [varchar](100) NULL,\n\t[Level] [varchar](100) NULL,\n\t[Time] [datetime] NULL,\n\t[Subscription] [varchar](200) NULL,\n\t[Event initiated by] [varchar](1000) NULL,\n\t[Resource type] [varchar](1000) NULL,\n\t[Resource group] [varchar](1000) NULL,\n    [Resource] [varchar](2000) NULL\n)\nWITH  \n(   \n    DISTRIBUTION = HASH ([Operation name])\n);\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/queries_replication_tables')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT COUNT(dtct.[CustomerID]),[SalesPerson]\nFROM [dbo].[DimCustomer] AS dtct JOIN [dbo].[FactSales] ftsl\nON dtct.[CustomerID]=ftsl.[CustomerID]\nGROUP BY dtct.[SalesPerson]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedpool",
						"poolName": "dedicatedpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/serverless_ext_parquet_table')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "\n-- drop EXTERNAL table logdata;\n-- drop EXTERNAL DATA SOURCE ds_log_data ;\n-- drop CREDENTIAL CredSaasToken;\n--CREATE DATABASE SCOPED CREDENTIAL CredSaasToken2 \n--WITH IDENTITY 'SHARED ACCES KEY',\n--SECRET='';\n\ncreate EXTERNAL data SOURCE ds_log_data_2\nWITH(\n    LOCATION='https://storagegen2kr.blob.core.windows.net/container-parquet',\n    CREDENTIAL=CredSaasToken\n);\n\n\nCREATE EXTERNAL FILE FORMAT ParquetFileFormat WITH(\n    FORMAT_TYPE= PARQUET,\n    DATA_COMPRESSION='org.apache.hadoop.io.compress.SnappyCodec'\n);\n\ndrop EXTERNAL TABLE logdata_parquet;\n\nCREATE EXTERNAL TABLE [logdata_parquet]\n(\n    [Correlationid] [varchar](200) NULL,\n\t[Operationname] [varchar](200) NULL,\n\t[Status] [varchar](100) NULL,\n\t[Eventcategory] [varchar](100) NULL,\n\t[Level] [varchar](100) NULL,\n\t[Time] [varchar](100) NULL,\n\t[Subscription] [varchar](200) NULL,\n\t[Eventinitiatedby] [varchar](1000) NULL,\n\t[Resourcetype] [varchar](1000) NULL,\n\t[Resourcegroup] [varchar](1000) NULL,\n    [Resource] [varchar](2000) NULL)\nWITH(\n    LOCATION='/',\n    DATA_SOURCE=ds_log_data_2,\n    FILE_FORMAT=ParquetFileFormat\n);\n\nSELECT * FROM [logdata_parquet];\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "appdb",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/serverless_external_csv')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "create database [appdb]\n\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = 'P@ssword@123';\n\ncreate DATABASE SCOPED CREDENTIAL CredSaasToken\nWITH IDENTITY = 'SHARED ACCESS SIGNATURE',\nSECRET='sv=2022-11-02&ss=bt&srt=sco&sp=rwlcuy&se=2023-10-27T20:20:33Z&st=2023-10-20T12:20:33Z&spr=https&sig=9CqopMWJAGr2KUxkKaOU0D4h67K5Spna5K5Rzo23%2Fog%3D'\n;\n\ncreate EXTERNAL DATA SOURCE ds_log_data \nwith (LOCATION = 'https://storagegen2kr.blob.core.windows.net/csv-container',\n        CREDENTIAL = CredSaasToken);\n\nCREATE EXTERNAL FILE FORMAT TextFileFormat WITH(\n    FORMAT_TYPE=DELIMITEDTEXT,\n    FORMAT_OPTIONS(\n        FIELD_TERMINATOR=',',\n        FIRST_ROW = 2\n    )\n)\n\nCREATE EXTERNAL TABLE [logdata]\n(\n    [Correlation id] [varchar](200) NULL,\n\t[Operation name] [varchar](200) NULL,\n\t[Status] [varchar](100) NULL,\n\t[Event category] [varchar](100) NULL,\n\t[Level] [varchar](100) NULL,\n\t[Time] [datetime] NULL,\n\t[Subscription] [varchar](200) NULL,\n\t[Event initiated by] [varchar](1000) NULL,\n\t[Resource type] [varchar](1000) NULL,\n\t[Resource group] [varchar](1000) NULL,\n    [Resource] [varchar](2000) NULL)\nWITH(\n    LOCATION = '/Log.csv',\n    DATA_SOURCE=ds_log_data,\n    FILE_FORMAT=TextFileFormat\n)\n\nselect * from logdata",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "appdb",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dedicatedpool')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "uksouth"
		}
	]
}